package sites

import (
	"regexp"
	"strings"
)

func cyberSyndromeNet() []string {
	var ips []string
	for _, link := range cyberSyndromeNetLinks() {
		body, err := crawl(link)
		if err != nil {
			errmsg("cyberSyndromeNet crawl", err)
			continue
		}
		ips = append(ips, cyberSyndromeNetIPS(body)...)
	}
	return ips
}

func cyberSyndromeNetLinks() []string {
	var links = []string{
		"http://www.cybersyndrome.net/pla6.html",
		// "http://www.cybersyndrome.net/pld6.html",
	}
	return links
}

func cyberSyndromeNetIPS(body []byte) []string {
	var ips []string
	reIP := regexp.MustCompile(`var as=\[([\d,]+?)\]`)
	rePort := regexp.MustCompile(`var ps=\[([\d,]+?)\]`)
	reN := regexp.MustCompile(`var n=(\(.+?);`)
	if !reIP.Match(body) || !rePort.Match(body) || !reN.Match(body) {
		return ips
	}
	as := strings.Split(string(reIP.FindSubmatch(body)[1]), ",")
	ps := strings.Split(string(rePort.FindSubmatch(body)[1]), ",")
	n:=string(reN.FindSubmatch(body)[1])
	for i := 0; i < 4; i++ {
		// i := 0
		as = append(as, as[i])
	}
	for i, port := range ps {
		for j := 0; j < 4; j++ {
			// j := 1
			ips = append(ips, "http://"+as[i*4+j]+"."+as[i*4+j+1]+"."+as[i*4+j+2]+"."+as[i*4+j+3]+":"+port)
		}
	}
	return ips
}

var as=[28,37,58,177,67,83,134,122,183,139,104,200,63,129,131,138,201,2,120,5,9,78,28,178,238,228,187,5,9,78,89,138,185,22,181,193,106,192,149,62,140,252,21,202,125,94,139,190,145,80,114,31,182,52,156,180,210,205,53,190,7,112,18,144,48,110,39,170,79,16,19,190,151,94,45,119,28,22,236,149,56,108,133,66,70,147,195,178,32,181,66,186,103,226,220,163,172,220,221,212,237,23,60,118,83,151,51,159,89,201,219,118,83,151,51,13,211,146,106,120,51,211,108,160,16,226,234,212,28,84,105,119,28,26,57,61,220,26,97,60,248,199,206,139,59,35,10,190,128,162,70,175,139,252,193,202,21,32,148,211,249,50,216,121,129,127,209,58,181,39,182,202,138,127,66,223,197,56,102,194,182,74,248,194,182,74,206,194,182,74,203,194,182,74,51,185,93,3,123,185,82,212,95,200,232,51,242,189,125,170,36,187,84,222,153,187,35,137,97,177,72,56,155,177,4,173,242,138,94,160,176,94,155,195,235,47,89,241,103,144,217,201,95,208,40,75,43,66,82,144,29,40,76,17,123,138,197,131,109,45,55,157,204,96,44,148,86,173,68,185,170,212,237,7,189,188,166,68,38,171,255,199,129,163,172,27,213,163,172,215,220,119,28,69,59,58,74,78,19,219,127,191,12,212,237,7,189,137,74,254,242,59,157,101,222,66,82,123,234,150,95,179,155,160,16,230,197,122,183,139,107,47,90,72,227,86,102,106,150,122,183,137,190,47,206,51,67,142,44,194,14,160,16,230,197,52,187,144,187,158,58,172,207,109,233,125,171,47,91,139,78,151,80,140,233,147,135,210,114,142,44,194,14,144,217,233,5,159,65,110,167,159,203,20,231,138,197,131,109,47,89,23,174,128,199,199,41,144,217,233,5,198,50,167,23,144,217,204,254,35,196,26,166,198,50,167,23,198,50,243,147,159,203,20,231,5,2,137,13,144,217,204,254,104,155,53,214,92,222,146,65,88,99,149,188,80,211,172,25,80,211,13,152,168,235,93,162,80,211,4,187,163,172,175,210,80,211,186,39,80,211,13,152,35,200,187,49,5,189,153,156,46,218,73,162,125,212,203,161,212,200,246,24,13,80,147,35,80,211,19,46,80,211,19,46,80,85,157,168,194,182,74,7,80,211,19,46,37,187,116,199,119,28,138,104,13,95,231,14,141,0,7,2,139,59,35,10,192,116,142,153,159,89,195,153,163,172,217,103,168,128,29,75,139,59,28,168,167,114,196,153,34,240,231,232,13,127,111,108,95,85,50,218,139,59,223,115,80,211,186,39,149,202,0,60,122,183,243,68,202,78,227,33,82,208,118,172,167,99,193,192,167,99,64,242,77,36,18,162,194,182,74,168,142,44,194,14,88,99,35,242,35,188,227,48,91,194,42,51,35,231,85,153,172,104,238,157,93,190,142,240,104,196,150,119,35,231,63,94,35,188,239,119,35,188,244,15,34,240,231,232,34,240,231,232,159,65,110,167,167,114,166,192,35,188,131,123,35,188,245,137,35,188,245,70,159,89,31,155,128,199,198,79,160,16,230,197,123,30,236,222,109,74,75,61,185,22,173,130,185,22,173,161,182,52,22,58,103,254,94,190,222,124,22,133,167,99,72,119,212,237,63,29,159,65,142,92,198,199,69,204,115,127,68,66,193,194,69,36,101,50,1,2,195,80,140,212,125,212,207,121,139,59,2,223,36,67,231,3,124,158,88,112,128,199,121,141,142,44,137,222,67,78,143,182,217,61,15,26,119]
var ps=[80,80,8080,80,3128,3128,9090,3128,53281,53281,8081,1234,3130,3129,3129,3130,8080,8080,8080,3128,3128,3128,3128,3129,8888,2000,8080,3128,3128,80,8080,3128,53281,3128,80,80,80,80,80,8080,80,80,80,80,80,3128,3128,3128,3128,8080,8080,80,80,80,3128,3128,80,80,80,8080,3128,80,8080,1080,80,80,80,80,3128,3128,80,3128,80,8888,80,80,8080,3128,80,8080,80,80,8080,8088,8080,8080,8080,3128,808,80,14826,10098,80,54566,54566,8080,3128,3128,80,3128,8080,3128,80,3128,80,3128,80,3128,3128,3128,3128,3128,9999,31288,80,3128,8080,8080,3128,80,8080,80,80,80,80,80,80,8080,3128,3128,3128,80,80,3128,80,8080,8080,8080,8118,3128,80,80,80,3128,80,80,8118,3128,3128,8080,80,80,3128,8080,3129,3128,80,8118,80,80,80,3128,80,80,80,80,80,3130,3129,80,8080,80,80,80,3128,8118,8080,1212,80,10010,10010,8080,8080,8080,8000,8888,8080,8080,8080,3128,80,8081,3128,8888,8080,3128,3128,80,8080,3128]
var n=(91*1012+121*1463+82+1077+192+ps[1]+10+161+134+2155+2+45+240+ps[89]+69*ps[133]+200+4011+241*5072+270+ps[191]+106+2449+251*6035+265*6636)%800
as=as.concat(as.splice(0,n))
